---
# tasks file for ansible-role-snmpd/

- name: "Include OS-specific variables"
  include_vars: "{{ ansible_os_family }}.yaml"

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: "Install required packages"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  when: item|string not in ansible_facts.packages
  with_items: "{{ snmp_packages }}"

- name: "net-snmp-devel package, if missing"
  ansible.builtin.package:
    name: "net-snmp-devel"
    state: present
  when:
    - "'net-snmp-devel' not in ansible_facts.packages"
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version <= '6'

- name: "Stop SNMP daemon"
  ansible.builtin.service:
    name: "{{ snmp_daemon }}"
    state: stopped

- name: "Check if SNMP v3 user config exists in snmp_config"
  shell: cat {{ snmp_config }} | grep rouser
  register: rouser
  ignore_errors: true

- name: "Delete existing /var/lib/net-snmp/snmpd.conf config file, as there is no SNMP v3 user"
  ansible.builtin.file:
    path: /var/lib/net-snmp/snmpd.conf
    state: absent
  when: rouser.rc != 0

- name: "Delete existing SNMP v1/v2c configurations from SNMP daemon config file"
  ansible.builtin.replace:
    path: "{{ snmp_config }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    backup: yes
  with_items:
    - regexp: '^(.*rwcommunity.*)'
      replace: '#\1'
    - regexp: '^(.*rocommunity.*)'
      replace: '#\1'

- name: "Create SNMPv3 User, using net-snmp-config"
  shell: net-snmp-create-v3-user -ro -x AES -a SHA -A {{ snmp_password | quote }} -X {{ snmp_password | quote }} {{ snmp_username | quote }}
  args:
    creates: "{{ snmp_creates }}"
  #when: ansible_os_family == 'RedHat'

#- name: "Create SNMPv3 User, using net-snmp-config (Debian)"
#  shell: net-snmp-config --create-v3-user -ro -x AES -a SHA -A {{ snmp_password | quote }} -X {{ snmp_password | quote }} {{ snmp_username | quote }}
#  args:
#    creates: /var/lib/snmp/snmpd.conf
#  when: ansible_os_family == 'Debian'

- name: "Start SNMP daemon"
  ansible.builtin.service:
    name: "{{ snmp_daemon }}"
    enabled: yes
    state: started
